{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ShareComponent = class ShareComponent {\n  constructor(route) {\n    this.route = route;\n  }\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n};\nShareComponent = __decorate([Component({\n  selector: 'app-share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.css']\n})], ShareComponent);\nexport { ShareComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YACUC,KAAqB;IAArB,UAAK,GAALA,KAAK;EAEX;EAEJC,QAAQ;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ;IAChD,MAAMC,kBAAkB,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D;IACA,IAAI,CAACC,OAAO,GAAGC,QAAQ,CAACC,IAAI,CAACF,OAAO,IAAIA,OAAO,CAACG,EAAE,KAAKN,kBAAkB,CAAC;EAC5E;CAED;AAjBYP,cAAc,eAL1BD,SAAS,CAAC;EACTe,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWhB,cAAc,CAiB1B;SAjBYA,cAAc","names":["Component","ShareComponent","constructor","route","ngOnInit","routeParams","snapshot","paramMap","productIdFromRoute","Number","get","product","products","find","id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Admin\\OneDrive\\Рабочий стол\\4 semester\\WEB\\lab4\\src\\app\\share\\share.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.css']\n})\nexport class ShareComponent {\n  product: Product | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n  )\n    { }\n\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n  \n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}